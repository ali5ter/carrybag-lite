#!/usr/bin/env bash

# Completion

# @ref https://kubernetes.io/docs/tasks/tools/install-kubectl/#optional-kubectl-configurations
type kubectl >/dev/null 2>&1 || {
    # shellcheck disable=SC1090
    source <(kubectl completion bash)
    [[ -f /usr/local/etc/bash_completion.d/kubectl ]] || kubectl completion bash >/usr/local/etc/bash_completion.d/kubectl
}

type minikube >/dev/null 2>&1 || {
# shellcheck disable=SC1090
    source <(minikube completion bash)
    [[ -f /usr/local/etc/bash_completion.d/minikube ]] || minikube completion bash >/usr/local/etc/bash_completion.d/minikube
}

[ -f ~/.velero_completion.sh ] || curl -s -o ~/.velero_completion.sh https://raw.githubusercontent.com/ali5ter/cli_taxo/master/exp4/results/velero_completion.sh
# shellcheck disable=SC1090
source ~/.velero_completion.sh

# @ref https://github.com/vmware-tanzu/community-edition
type tanzu >/dev/null 2>&1 || {
    brew tap vmware-tanzu/tanzu
    brew install tanzu-community-edition
    /usr/local/Cellar/tanzu-community-edition/v0.9.1/libexec/configure-tce.sh
}
# shellcheck disable=SC1090
source <(tanzu completion bash)
[[ -f /usr/local/etc/bash_completion.d/tanzu ]] || tanzu completion bash >/usr/local/etc/bash_completion.d/tanzu

# @ref https://docs.vmware.com/en/Tanzu-Application-Platform/1.1/tap/GUID-install-general.html#tanzu-cli-clean-install
export TANZU_CLI_NO_INIT=true

# shellcheck disable=SC1090
source <(tmc completion bash)
[[ -f /usr/local/etc/bash_completion.d/tmc ]] || tmc completion bash >/usr/local/etc/bash_completion.d/tmc

# Prompt

# shellcheck disable=SC1091
source "$HOME/Documents/Projects/VMware/tmc-prompt/tmc_prompt.sh"

# Fonts

# @ref https://clarity.design/get-started/design/
# shellcheck disable=SC2012
[ "$(ls -1qA ~/Library/Fonts/ClarityCity* 2>/dev/null | wc -l)" -eq "0" ] && {
    git clone git@github.com:vmware/clarity-city.git
    cp clarity-city/TrueType/ClarityCity* ~/Library/Fonts/
    rm -fR clarity-city
}

# shellcheck disable=SC2012
[ "$(ls -1qA ~/Library/Fonts/Consolas* 2>/dev/null | wc -l)" -eq "0"  ] && {
    echo "âœ‹ Download and install the Consolas font from https://fontsgeek.com/fonts/Consolas-Regular"
}

# GCloud CLI
# shellcheck disable=SC1091
if [ -f '/Users/bowena/google-cloud-sdk/path.bash.inc' ]; then . '/Users/bowena/google-cloud-sdk/path.bash.inc'; fi
# shellcheck disable=SC1091
if [ -f '/Users/bowena/google-cloud-sdk/completion.bash.inc' ]; then . '/Users/bowena/google-cloud-sdk/completion.bash.inc'; fi

# Functions

kubeconf() {
    # Merge all kubeconfig files in ~/.kube into KUBECONFIG
    # @ref https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/
    local confs=''
    for file in ~/.kube/*config*; do
        confs="${confs}$file:";
    done
    export KUBECONFIG="$confs"
    env | grep KUBECONFIG
}
kubeconf >/dev/null

vmw_whois() {
    # VMware specific whois
    local name="$*"
    #ref https://source.vmware.com/portal/search/people?q=alister&aq=(@cnbd%3D%22alister%22%20OR%20@ucnbd%3D%22alister%22)&client=InternalPeopleSearch&Tab=vmwarepeople&start=0&num=20&sid=1606940050&allPeople=true
    local url_base='https://source.vmware.com/portal/search/people?'
    local url_query_attributes="client=InternalPeopleSearch&Tab=vmwarepeople&start=0&num=20&sid=1606938064&allPeople=true"
    name="${name//+([[:space:]])/%20}"
    local url_query="q=${name}&aq=(@cnbd%3D%22${name}%22%20OR%20@ucnbd%3D%22${name}%22)"
    open "${url_base}${url_query}&${url_query_attributes}"
}